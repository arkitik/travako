name: Compile Check

on:
  push:
    tags-ignore:
      - '*v'
  pull_request:

jobs:
  compile:
    name: Compile Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Calculate next version
        id: version
        run: |
          # Get latest tag (assume tags are in format vX.Y.Z)
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          # Count commits since latest tag
          COMMITS_SINCE=$(git rev-list ${LATEST_TAG}..HEAD --count)
          echo "Commits since latest tag: $COMMITS_SINCE"
          # Parse version numbers
          VERSION_REGEX="^v([0-9]+)\.([0-9]+)\.([0-9]+)$"
          if [[ "$LATEST_TAG" =~ $VERSION_REGEX ]]; then
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
          else
            MAJOR=0
            MINOR=0
            PATCH=0
          fi
          # If there are new commits, bump patch
          if [ "$COMMITS_SINCE" -gt 0 ]; then
            PATCH=$((PATCH + 1))
          fi
          NEXT_VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          echo "Calculated next version: $NEXT_VERSION"
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Compile
        run: mvn -B clean compile

      - name: Validate Project Structure
        run: |
          echo "Validating module structure..."
          for module in travako-core travako-starter travako-engine; do
            if [ ! -d "$module" ]; then
              echo "Error: Module $module not found"
              exit 1
            fi
          done
          echo "Module structure validation completed successfully"

      - name: Notify on Success
        if: success()
        run: echo "✅ Code compiles successfully"

      - name: Notify on Failure
        if: failure()
        run: echo "❌ Compilation failed"
